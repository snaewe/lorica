// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html


// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:51

// *************************************************************
// Inline operations for union Test_Union
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:165



// Accessor to set the discriminant.
ACE_INLINE
void
Test_Union::_d ( ::CORBA::Short discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
::CORBA::Short
Test_Union::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:576

// Accessor to set the member.
ACE_INLINE
void
Test_Union::i (CORBA::Short val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 0;
  // Set the value.
  this->u_.i_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Short
Test_Union::i (void) const
{
  return this->u_.i_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:576

// Accessor to set the member.
ACE_INLINE
void
Test_Union::obj (const ::CORBA::Object_ptr val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 1;
  typedef ::CORBA::Object_var OBJECT_FIELD;
  ACE_NEW (
      this->u_.obj_,
      OBJECT_FIELD ( ::CORBA::Object::_duplicate (val))
    );
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Object_ptr
Test_Union::obj (void) const
{
  return this->u_.obj_->in ();
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:857

/// Accessor to set the member.
ACE_INLINE
void
Test_Union::foo (char *val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = -32768;
  this->u_.foo_ = val;
}

// Accessor to set the member.
ACE_INLINE
void
Test_Union::foo (const char *val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = -32768;
  // Set the value.
  this->u_.foo_ = ::CORBA::string_dup (val);
}

/// Accessor to set the member.
ACE_INLINE
void
Test_Union::foo (const ::CORBA::String_var &val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = -32768;
  // Set the value.
  ::CORBA::String_var foo_var = val;
  this->u_.foo_ = foo_var._retn ();
}

ACE_INLINE
const char *
Test_Union::foo (void) const // get method
{
  return this->u_.foo_;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ci.cpp:70

#if !defined (_SIMPLE_SERVER___CI_)
#define _SIMPLE_SERVER___CI_

ACE_INLINE
Simple_Server::Simple_Server (
    TAO_Stub *objref,
    ::CORBA::Boolean _tao_collocated,
    TAO_Abstract_ServantBase *servant,
    TAO_ORB_Core *oc
  )
  : ::CORBA::Object (objref, _tao_collocated, servant, oc),
    the_TAO_Simple_Server_Proxy_Broker_ (0)
{
  this->Simple_Server_setup_collocation ();
}

ACE_INLINE
Simple_Server::Simple_Server (
    IOP::IOR *ior,
    TAO_ORB_Core *oc
  )
  : ::CORBA::Object (ior, oc),
    the_TAO_Simple_Server_Proxy_Broker_ (0)
{
}

#endif /* end #if !defined */

