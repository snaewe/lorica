// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html


// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ci.cpp:70

#if !defined (_UNIONTEST_COMMENTRESTRICTION___CI_)
#define _UNIONTEST_COMMENTRESTRICTION___CI_

ACE_INLINE
UnionTest::CommentRestriction::CommentRestriction (
    TAO_Stub *objref,
    ::CORBA::Boolean _tao_collocated,
    TAO_Abstract_ServantBase *servant,
    TAO_ORB_Core *oc
  )
  : ::CORBA::Object (objref, _tao_collocated, servant, oc),
    the_TAO_CommentRestriction_Proxy_Broker_ (0)
{
  this->UnionTest_CommentRestriction_setup_collocation ();
}

ACE_INLINE
UnionTest::CommentRestriction::CommentRestriction (
    IOP::IOR *ior,
    TAO_ORB_Core *oc
  )
  : ::CORBA::Object (ior, oc),
    the_TAO_CommentRestriction_Proxy_Broker_ (0)
{
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:51

// *************************************************************
// Inline operations for union UnionTest::Restriction
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:165

ACE_INLINE
void 
UnionTest::Restriction::_default ()
{
  this->_reset ();
  this->disc_ = '\1';
}

// Accessor to set the discriminant.
ACE_INLINE
void
UnionTest::Restriction::_d ( ::CORBA::Char discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
::CORBA::Char
UnionTest::Restriction::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:305

/// Accessor to set the member.
ACE_INLINE
void
UnionTest::Restriction::comment (UnionTest::CommentRestriction_ptr val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = '\x0';
  typedef UnionTest::CommentRestriction_var OBJECT_FIELD;
  ACE_NEW (
      this->u_.comment_,
      OBJECT_FIELD (
          UnionTest::CommentRestriction::_duplicate (val)
        )
    );
}

/// Retrieve the member.
ACE_INLINE
UnionTest::CommentRestriction_ptr 
UnionTest::Restriction::comment (void) const
{
  return this->u_.comment_->in ();
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ci.cpp:70

#if !defined (_UNIONTEST_RESTRICTIONCONTAINER___CI_)
#define _UNIONTEST_RESTRICTIONCONTAINER___CI_

ACE_INLINE
UnionTest::RestrictionContainer::RestrictionContainer (
    TAO_Stub *objref,
    ::CORBA::Boolean _tao_collocated,
    TAO_Abstract_ServantBase *servant,
    TAO_ORB_Core *oc
  )
  : ::CORBA::Object (objref, _tao_collocated, servant, oc),
    the_TAO_RestrictionContainer_Proxy_Broker_ (0)
{
  this->UnionTest_RestrictionContainer_setup_collocation ();
}

ACE_INLINE
UnionTest::RestrictionContainer::RestrictionContainer (
    IOP::IOR *ior,
    TAO_ORB_Core *oc
  )
  : ::CORBA::Object (ior, oc),
    the_TAO_RestrictionContainer_Proxy_Broker_ (0)
{
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ci.cpp:70

#if !defined (_UNIONTEST_TESTSERVER___CI_)
#define _UNIONTEST_TESTSERVER___CI_

ACE_INLINE
UnionTest::TestServer::TestServer (
    TAO_Stub *objref,
    ::CORBA::Boolean _tao_collocated,
    TAO_Abstract_ServantBase *servant,
    TAO_ORB_Core *oc
  )
  : ::CORBA::Object (objref, _tao_collocated, servant, oc),
    the_TAO_TestServer_Proxy_Broker_ (0)
{
  this->UnionTest_TestServer_setup_collocation ();
}

ACE_INLINE
UnionTest::TestServer::TestServer (
    IOP::IOR *ior,
    TAO_ORB_Core *oc
  )
  : ::CORBA::Object (ior, oc),
    the_TAO_TestServer_Proxy_Broker_ (0)
{
}

#endif /* end #if !defined */

