##  Process this file with automake to create Makefile.in
##
## $Id$
##
## This file was generated by MPC.  Any changes made directly to
## this file will be lost the next time it is generated.
##
## MPC Command:
## /home/colding/work/src/42tools/lorica/ACE_wrappers/bin/mwc.pl -type automake lorica.mwc

ACE_BUILDDIR = $(top_builddir)/..
ACE_ROOT = $(top_srcdir)/..
TAO_BUILDDIR = $(top_builddir)
TAO_IDL = ACE_ROOT=$(ACE_ROOT) TAO_ROOT=$(TAO_ROOT) $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDL_DEP = $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDLFLAGS = -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I$(TAO_ROOT) -I$(srcdir) -g $(ACE_BUILDDIR)/apps/gperf/src/gperf
TAO_ROOT = $(top_srcdir)

noinst_LTLIBRARIES =
CLEANFILES =
BUILT_SOURCES =
noinst_HEADERS =

## Makefile.lorica_Client.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  ServerAgentC.cpp \
  ServerAgentC.h \
  ServerAgentC.inl \
  ServerAgentS.cpp \
  ServerAgentS.h \
  ServerAgentS.inl

CLEANFILES += \
  ServerAgent-stamp \
  ServerAgentC.cpp \
  ServerAgentC.h \
  ServerAgentC.inl \
  ServerAgentS.cpp \
  ServerAgentS.h \
  ServerAgentS.inl

ServerAgentC.cpp ServerAgentC.h ServerAgentC.inl ServerAgentS.cpp ServerAgentS.h ServerAgentS.inl: ServerAgent-stamp

ServerAgent-stamp: $(srcdir)/ServerAgent.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Sa -St -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -Wb,export_macro=Lorica_Client_Export -Wb,export_include=lorica/Lorica_Client_Export.h $(srcdir)/ServerAgent.idl
	@touch "$@"

BUILT_SOURCES += \
  ReferenceMapperC.cpp \
  ReferenceMapperC.h \
  ReferenceMapperC.inl \
  ReferenceMapperS.cpp \
  ReferenceMapperS.h \
  ReferenceMapperS.inl

CLEANFILES += \
  ReferenceMapper-stamp \
  ReferenceMapperC.cpp \
  ReferenceMapperC.h \
  ReferenceMapperC.inl \
  ReferenceMapperS.cpp \
  ReferenceMapperS.h \
  ReferenceMapperS.inl

ReferenceMapperC.cpp ReferenceMapperC.h ReferenceMapperC.inl ReferenceMapperS.cpp ReferenceMapperS.h ReferenceMapperS.inl: ReferenceMapper-stamp

ReferenceMapper-stamp: $(srcdir)/ReferenceMapper.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Sa -St -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -Wb,export_macro=Lorica_Client_Export -Wb,export_include=lorica/Lorica_Client_Export.h $(srcdir)/ReferenceMapper.idl
	@touch "$@"

BUILT_SOURCES += \
  Lorica_Client_Export.h

CLEANFILES += \
  Lorica_Client_Export.h

Lorica_Client_Export.h: $(srcdir)/Lorica_Client
	generate_export_file.pl  $(srcdir)/Lorica_Client > Lorica_Client_Export.h

noinst_LTLIBRARIES += liblorica_Client.la

liblorica_Client_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I../../src \
  -DLORICA_CLIENT_BUILD_DLL

liblorica_Client_la_SOURCES = \
  ReferenceMapperC.cpp \
  ReferenceMapperS.cpp \
  ServerAgentC.cpp \
  ServerAgentS.cpp \
  ServerAgent_impl.cpp \
  debug.cpp

../../lib:
	mkdir -p ../../lib


liblorica_Client_la_DEPENDENCIES = \
 ../../lib

liblorica_Client_la_LDFLAGS = \
 -L../../lib

noinst_HEADERS += \
  ReferenceMapper.idl \
  ReferenceMapperC.h \
  ReferenceMapperC.inl \
  ReferenceMapperS.h \
  ReferenceMapperS.inl \
  ServerAgent.idl \
  ServerAgentC.h \
  ServerAgentC.inl \
  ServerAgentS.h \
  ServerAgentS.inl \
  ServerAgent_impl.h \
  debug.h

endif BUILD_EXCEPTIONS

## Makefile.lorica_EvaluatorBase.am

if BUILD_CORBA_MESSAGING
if BUILD_EXCEPTIONS
if BUILD_INTERCEPTORS
if BUILD_SSL

BUILT_SOURCES += \
  Lorica_EvaluatorBase_Export.h

CLEANFILES += \
  Lorica_EvaluatorBase_Export.h

Lorica_EvaluatorBase_Export.h: $(srcdir)/Lorica_EvaluatorBase
	generate_export_file.pl  $(srcdir)/Lorica_EvaluatorBase > Lorica_EvaluatorBase_Export.h

noinst_LTLIBRARIES += liblorica_EvaluatorBase.la

liblorica_EvaluatorBase_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs \
  -I../../src \
  -DACE_HAS_SSL=1 \
  @ACE_TLS_CPPFLAGS@ \
  -DLORICA_EVALUATORBASE_BUILD_DLL

liblorica_EvaluatorBase_la_SOURCES = \
  Config.cpp \
  EvaluatorBase.cpp \
  EvaluatorLoader.cpp \
  FileConfig.cpp \
  MapperRegistry.cpp \
  NullProxyMapper.cpp \
  ProxyMapper.cpp \
  ProxyReplyHandler.cpp \
  ProxyServant.cpp \
  RMVByMapped.cpp \
  RMVByNative.cpp \
  ReferenceMapValue.cpp



liblorica_EvaluatorBase_la_DEPENDENCIES = \
 ../../lib

liblorica_EvaluatorBase_la_LDFLAGS = \
 @ACE_TLS_LDFLAGS@ -L../../lib

noinst_HEADERS += \
  Config.h \
  EvaluatorBase.h \
  EvaluatorLoader.h \
  FileConfig.h \
  MapperRegistry.h \
  NullProxyMapper.h \
  ProxyMapper.h \
  ProxyReplyHandler.h \
  ProxyServant.h \
  RMVByMapped.h \
  RMVByNative.h \
  ReferenceMapValue.h \
  ReferenceMapperC.inl \
  ReferenceMapperS.inl \
  ServerAgentC.inl \
  ServerAgentS.inl

endif BUILD_SSL
endif BUILD_INTERCEPTORS
endif BUILD_EXCEPTIONS
endif BUILD_CORBA_MESSAGING

## Makefile.lorica_GenericEvaluator.am

if BUILD_CORBA_MESSAGING
if BUILD_EXCEPTIONS
if BUILD_INTERCEPTORS
if BUILD_SSL
if !BUILD_ACE_FOR_TAO

BUILT_SOURCES += \
  Lorica_GenericEvaluator_Export.h

CLEANFILES += \
  Lorica_GenericEvaluator_Export.h

Lorica_GenericEvaluator_Export.h: $(srcdir)/Lorica_GenericEvaluator
	generate_export_file.pl  $(srcdir)/Lorica_GenericEvaluator > Lorica_GenericEvaluator_Export.h

noinst_LTLIBRARIES += liblorica_GenericEvaluator.la

liblorica_GenericEvaluator_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs \
  -I../../src \
  -DACE_HAS_SSL=1 \
  @ACE_TLS_CPPFLAGS@ \
  -DLORICA_GENERICEVALUATOR_BUILD_DLL

liblorica_GenericEvaluator_la_SOURCES = \
  GenericEvaluator.cpp \
  GenericLoader.cpp \
  GenericMapper.cpp \
  IFRService.cpp



liblorica_GenericEvaluator_la_DEPENDENCIES = \
 ../../lib

liblorica_GenericEvaluator_la_LDFLAGS = \
 @ACE_TLS_LDFLAGS@ -L../../lib

noinst_HEADERS += \
  GenericEvaluator.h \
  GenericLoader.h \
  GenericMapper.h \
  IFRService.h \
  ReferenceMapperC.inl \
  ReferenceMapperS.inl \
  ServerAgentC.inl \
  ServerAgentS.inl

endif !BUILD_ACE_FOR_TAO
endif BUILD_SSL
endif BUILD_INTERCEPTORS
endif BUILD_EXCEPTIONS
endif BUILD_CORBA_MESSAGING

## Clean up template repositories, etc.
clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB
