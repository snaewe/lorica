#  
#  Makefile for Lorica.
#  Copyright (C) 2008 OMC Denmark ApS
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, 
#  MA 02111-1307 USA
#
# This file was originally generated by MPC.
#
# MPC Command:
# mwc.pl -type automake lorica.mwc

CWD = $(CURDIR)

if HAVE_ACE_ROOT
LORICA_ROOT = $(LORICA_top_dir)
ACE_ROOT = $(CONF_ACE_ROOT)
TAO_ROOT = $(ACE_ROOT)/TAO
PATH = $(LORICA_ROOT)/bin:$(ACE_ROOT)/bin:$(ENV_PATH)

if LORICA_DARWIN
export DYLD_LIBRARY_PATH = $(ACE_ROOT)/lib:$(ENV_DYLD_LIBRARY_PATH)
else
export LD_LIBRARY_PATH = $(ENV_LD_LIBRARY_PATH)
endif

endif # HAVE_ACE_ROOT

sbin_PROGRAMS = lorica

lorica_CPPFLAGS = \
	$(LORICA_CXXFLAGS) \
	$(LORICA_CPPFLAGS) \
	-DACE_HAS_SSL=1

lorica_SOURCES =  \
	ReferenceMapper_i.cpp \
	main.cpp              \
	ntsvc.cpp             \
	proxy.cpp             \
	ReferenceMapper_i.h   \
	ntsvc.h               \
	proxy.h

if LORICA_STATIC
    STATIC_FLAGS = -all-static
else
    STATIC_FLAGS =
endif

lorica_LDFLAGS = $(STATIC_FLAGS)

lorica_LDADD = \
	$(LORICA_top_dir)/src/lorica/liblorica_EvaluatorBase.la    \
	$(LORICA_top_dir)/src/lorica/liblorica_GenericEvaluator.la \
	$(LORICA_top_dir)/src/lorica/liblorica_Client.la           \
	$(LORICA_top_dir)/src/OCI/libOCI_AsynchProxyTools.la       \
	-lTAO_IFRService                                           \
	-lTAO_Svc_Utils                                            \
	-lTAO_DynamicInterface                                     \
	-lTAO_EndpointPolicy                                       \
	-lTAO_Messaging                                            \
	-lTAO_IORTable                                             \
	-lTAO_SSLIOP                                               \
	-lTAO_PI_Server                                            \
	-lACE_SSL                                                  \
	-lTAO_Security                                             \
	-lTAO_PI                                                   \
	-lTAO_CodecFactory                                         \
	-lTAO_PortableServer                                       \
	-lTAO_TypeCodeFactory                                      \
	-lTAO_IFR_Client                                           \
	-lTAO_DynamicAny                                           \
	-lTAO_Valuetype                                            \
	-lTAO_AnyTypeCode                                          \
	-lTAO_Codeset                                              \
	-lTAO                                                      \
	-lACE

# Only ever entered if we need to install ACE+TAO
if LORICA_MUST_INSTALL_ACETAO

if HAVE_ACE_ROOT
if LORICA_DARWIN
TAO_LIBS = \
	$(ACE_ROOT)/ace/libACE.dylib                            \
	$(ACE_ROOT)/ace/SSL/libACE_SSL.dylib                    \
	$(ACE_ROOT)/TAO/tao/libTAO_Codeset.dylib                \
	$(ACE_ROOT)/TAO/tao/libTAO_AnyTypeCode.dylib            \
	$(ACE_ROOT)/TAO/tao/libTAO_CodecFactory.dylib           \
	$(ACE_ROOT)/TAO/tao/libTAO_DynamicAny.dylib             \
	$(ACE_ROOT)/TAO/tao/libTAO_DynamicInterface.dylib       \
	$(ACE_ROOT)/TAO/tao/libTAO_EndpointPolicy.dylib         \
	$(ACE_ROOT)/TAO/TAO_IDL/libTAO_IDL_BE.dylib             \
	$(ACE_ROOT)/TAO/TAO_IDL/libTAO_IDL_FE.dylib             \
	$(ACE_ROOT)/TAO/orbsvcs/IFR_Service/libTAO_IFR_BE.dylib \
	$(ACE_ROOT)/TAO/tao/libTAO_IFR_Client.dylib             \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/libTAO_IFRService.dylib \
	$(ACE_ROOT)/TAO/tao/libTAO_ImR_Client.dylib             \
	$(ACE_ROOT)/TAO/tao/libTAO_IORTable.dylib               \
	$(ACE_ROOT)/TAO/tao/libTAO_Messaging.dylib              \
	$(ACE_ROOT)/TAO/tao/libTAO_PI_Server.dylib              \
	$(ACE_ROOT)/TAO/tao/libTAO_PI.dylib                     \
	$(ACE_ROOT)/TAO/tao/libTAO_PortableServer.dylib         \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/libTAO_Security.dylib   \
	$(ACE_ROOT)/TAO/tao/libTAO.dylib                        \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/libTAO_SSLIOP.dylib     \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/libTAO_Svc_Utils.dylib  \
	$(ACE_ROOT)/TAO/tao/libTAO_TypeCodeFactory.dylib        \
	$(ACE_ROOT)/TAO/tao/libTAO_Valuetype.dylib
else # LORICA_DARWIN
TAO_LIBS = \
	$(ACE_ROOT)/ace/libACE.so.$(LIBACE_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)                            \
	$(ACE_ROOT)/ace/SSL/libACE_SSL.so.$(LIBACE_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)                    \
	$(ACE_ROOT)/TAO/tao/libTAO_Codeset.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)                \
	$(ACE_ROOT)/TAO/tao/libTAO_AnyTypeCode.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)            \
	$(ACE_ROOT)/TAO/tao/libTAO_CodecFactory.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)           \
	$(ACE_ROOT)/TAO/tao/libTAO_DynamicAny.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)             \
	$(ACE_ROOT)/TAO/tao/libTAO_DynamicInterface.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)       \
	$(ACE_ROOT)/TAO/tao/libTAO_EndpointPolicy.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)         \
	$(ACE_ROOT)/TAO/TAO_IDL/libTAO_IDL_BE.so.5.$(LIBACETAO_REVISION).$(LIBACETAO_AGE)                             \
	$(ACE_ROOT)/TAO/TAO_IDL/libTAO_IDL_FE.so.5.$(LIBACETAO_REVISION).$(LIBACETAO_AGE)                             \
	$(ACE_ROOT)/TAO/orbsvcs/IFR_Service/libTAO_IFR_BE.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE) \
	$(ACE_ROOT)/TAO/tao/libTAO_IFR_Client.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)             \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/libTAO_IFRService.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE) \
	$(ACE_ROOT)/TAO/tao/libTAO_ImR_Client.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)             \
	$(ACE_ROOT)/TAO/tao/libTAO_IORTable.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)               \
	$(ACE_ROOT)/TAO/tao/libTAO_Messaging.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)              \
	$(ACE_ROOT)/TAO/tao/libTAO_PI_Server.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)              \
	$(ACE_ROOT)/TAO/tao/libTAO_PI.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)                     \
	$(ACE_ROOT)/TAO/tao/libTAO_PortableServer.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)         \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/libTAO_Security.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)   \
	$(ACE_ROOT)/TAO/tao/libTAO.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)                        \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/libTAO_SSLIOP.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)     \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/libTAO_Svc_Utils.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)  \
	$(ACE_ROOT)/TAO/tao/libTAO_TypeCodeFactory.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)        \
	$(ACE_ROOT)/TAO/tao/libTAO_Valuetype.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)
endif # !LORICA_DARWIN

ACETAO_LIBdir = $(libdir)
ACETAO_LIB_DATA = $(TAO_LIBS)

$(ACE_ROOT)/apps/gperf/src/tao_gperf:
	cp $(ACE_ROOT)/apps/gperf/src/gperf -f $(ACE_ROOT)/apps/gperf/src/tao_gperf
	cd $(ACE_ROOT)/bin && $(LN_S) ../apps/gperf/src/tao_gperf tao_gperf

$(ACE_ROOT)/TAO/TAO_IDL/tao_idl:

$(ACE_ROOT)/TAO/orbsvcs/IFR_Service/tao_ifr:

TAO_EXECUTABLES = \
	$(ACE_ROOT)/TAO/TAO_IDL/tao_idl             \
	$(ACE_ROOT)/apps/gperf/src/tao_gperf        \
	$(ACE_ROOT)/TAO/orbsvcs/IFR_Service/tao_ifr

TAO_EXECUTABLESdir = ${bindir}
TAO_EXECUTABLES_DATA = $(TAO_EXECUTABLES)

install-data-hook:
	chmod 755 $(DESTDIR)$(bindir)/tao_idl
	chmod 755 $(DESTDIR)$(bindir)/tao_gperf
	chmod 755 $(DESTDIR)$(bindir)/tao_ifr
if !LORICA_DARWIN
	cd $(DESTDIR)$(libdir) && $(LN_S) libACE.so.$(LIBACE_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)                  libACE.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libACE_SSL.so.$(LIBACE_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)              libACE_SSL.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_Codeset.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)          libTAO_Codeset.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_AnyTypeCode.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)      libTAO_AnyTypeCode.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_CodecFactory.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)     libTAO_CodecFactory.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_DynamicAny.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)       libTAO_DynamicAny.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_DynamicInterface.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE) libTAO_DynamicInterface.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_EndpointPolicy.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)   libTAO_EndpointPolicy.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_IDL_BE.so.5.$(LIBACETAO_REVISION).$(LIBACETAO_AGE)                           libTAO_IDL_BE.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_IDL_FE.so.5.$(LIBACETAO_REVISION).$(LIBACETAO_AGE)                           libTAO_IDL_FE.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_IFR_BE.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)           libTAO_IFR_BE.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_IFR_Client.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)       libTAO_IFR_Client.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_IFRService.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)       libTAO_IFRService.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_ImR_Client.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)       libTAO_ImR_Client.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_IORTable.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)         libTAO_IORTable.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_Messaging.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)        libTAO_Messaging.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_PI_Server.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)        libTAO_PI_Server.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_PI.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)               libTAO_PI.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_PortableServer.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)   libTAO_PortableServer.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_Security.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)         libTAO_Security.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)                  libTAO.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_SSLIOP.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)           libTAO_SSLIOP.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_Svc_Utils.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)        libTAO_Svc_Utils.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_TypeCodeFactory.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)  libTAO_TypeCodeFactory.so
	cd $(DESTDIR)$(libdir) && $(LN_S) libTAO_Valuetype.so.$(LIBTAO_CURRENT).$(LIBACETAO_REVISION).$(LIBACETAO_AGE)        libTAO_Valuetype.so
endif # !LORICA_DARWIN

if LORICA_DEVEL
lorica_aceincludedir = $(includedir)/ace
lorica_aceinclude_DATA = \
	$(ACE_ROOT)/ace/ACE.h                    \
	$(ACE_ROOT)/ace/ACE_export.h             \
	$(ACE_ROOT)/ace/Active_Map_Manager.h     \
	$(ACE_ROOT)/ace/Addr.h                   \
	$(ACE_ROOT)/ace/Array_Base.h             \
	$(ACE_ROOT)/ace/Array_Map.h              \
	$(ACE_ROOT)/ace/Assert.h                 \
	$(ACE_ROOT)/ace/Atomic_Op.h              \
	$(ACE_ROOT)/ace/Atomic_Op_T.h            \
	$(ACE_ROOT)/ace/Auto_Event.h             \
	$(ACE_ROOT)/ace/Auto_Ptr.h               \
	$(ACE_ROOT)/ace/Barrier.h                \
	$(ACE_ROOT)/ace/Base_Thread_Adapter.h    \
	$(ACE_ROOT)/ace/Basic_Types.h            \
	$(ACE_ROOT)/ace/CDR_Base.h               \
	$(ACE_ROOT)/ace/CDR_Stream.h             \
	$(ACE_ROOT)/ace/CORBA_macros.h           \
	$(ACE_ROOT)/ace/Cleanup.h                \
	$(ACE_ROOT)/ace/Condition_Recursive_Thread_Mutex.h \
	$(ACE_ROOT)/ace/Condition_Thread_Mutex.h \
	$(ACE_ROOT)/ace/Configuration.h          \
	$(ACE_ROOT)/ace/Containers.h             \
	$(ACE_ROOT)/ace/Containers_T.h           \
	$(ACE_ROOT)/ace/DLL.h                    \
	$(ACE_ROOT)/ace/Default_Constants.h      \
	$(ACE_ROOT)/ace/Dynamic_Service.h        \
	$(ACE_ROOT)/ace/Dynamic_Service_Base.h   \
	$(ACE_ROOT)/ace/Event.h                  \
	$(ACE_ROOT)/ace/Event_Handler.h          \
	$(ACE_ROOT)/ace/Exception_Macros.h       \
	$(ACE_ROOT)/ace/Flag_Manip.h             \
	$(ACE_ROOT)/ace/Free_List.h              \
	$(ACE_ROOT)/ace/Functor_T.h              \
	$(ACE_ROOT)/ace/Get_Opt.h                \
	$(ACE_ROOT)/ace/Global_Macros.h          \
	$(ACE_ROOT)/ace/Guard_T.h                \
	$(ACE_ROOT)/ace/Handle_Ops.h             \
	$(ACE_ROOT)/ace/Hash_Map_Manager_T.h     \
	$(ACE_ROOT)/ace/Hash_Map_With_Allocator_T.h \
	$(ACE_ROOT)/ace/INET_Addr.h              \
	$(ACE_ROOT)/ace/IO_Cntl_Msg.h            \
	$(ACE_ROOT)/ace/Init_ACE.h               \
	$(ACE_ROOT)/ace/Lib_Find.h               \
	$(ACE_ROOT)/ace/Local_Memory_Pool.h      \
	$(ACE_ROOT)/ace/Lock.h                   \
	$(ACE_ROOT)/ace/Lock_Adapter_T.h         \
	$(ACE_ROOT)/ace/Log_Msg.h                \
	$(ACE_ROOT)/ace/Log_Priority.h           \
	$(ACE_ROOT)/ace/MMAP_Memory_Pool.h       \
	$(ACE_ROOT)/ace/Malloc.h                 \
	$(ACE_ROOT)/ace/Malloc_Allocator.h       \
	$(ACE_ROOT)/ace/Malloc_Base.h            \
	$(ACE_ROOT)/ace/Malloc_T.h               \
	$(ACE_ROOT)/ace/Manual_Event.h           \
	$(ACE_ROOT)/ace/Map_Manager.h            \
	$(ACE_ROOT)/ace/Map_T.h                  \
	$(ACE_ROOT)/ace/Mem_Map.h                \
	$(ACE_ROOT)/ace/Message_Block.h          \
	$(ACE_ROOT)/ace/Message_Queue.h          \
	$(ACE_ROOT)/ace/Min_Max.h                \
	$(ACE_ROOT)/ace/Mutex.h                  \
	$(ACE_ROOT)/ace/Node.h                   \
	$(ACE_ROOT)/ace/Null_Barrier.h           \
	$(ACE_ROOT)/ace/Null_Condition.h         \
	$(ACE_ROOT)/ace/Null_Mutex.h             \
	$(ACE_ROOT)/ace/Null_Semaphore.h         \
	$(ACE_ROOT)/ace/OS_Errno.h               \
	$(ACE_ROOT)/ace/OS_Log_Msg_Attributes.h  \
	$(ACE_ROOT)/ace/OS_Memory.h              \
	$(ACE_ROOT)/ace/OS_NS_Thread.h           \
	$(ACE_ROOT)/ace/OS_NS_errno.h            \
	$(ACE_ROOT)/ace/OS_NS_math.h             \
	$(ACE_ROOT)/ace/OS_NS_signal.h           \
	$(ACE_ROOT)/ace/OS_NS_stdio.h            \
	$(ACE_ROOT)/ace/OS_NS_stdlib.h           \
	$(ACE_ROOT)/ace/OS_NS_string.h           \
	$(ACE_ROOT)/ace/OS_NS_strings.h          \
	$(ACE_ROOT)/ace/OS_NS_unistd.h           \
	$(ACE_ROOT)/ace/OS_NS_wchar.h            \
	$(ACE_ROOT)/ace/OS_main.h                \
	$(ACE_ROOT)/ace/Object_Manager_Base.h    \
	$(ACE_ROOT)/ace/Pair_T.h                 \
	$(ACE_ROOT)/ace/RB_Tree.h                \
	$(ACE_ROOT)/ace/RW_Mutex.h               \
	$(ACE_ROOT)/ace/RW_Thread_Mutex.h        \
	$(ACE_ROOT)/ace/Reactor.h                \
	$(ACE_ROOT)/ace/Reactor_Timer_Interface.h \
	$(ACE_ROOT)/ace/Recursive_Thread_Mutex.h \
	$(ACE_ROOT)/ace/Reverse_Lock_T.h         \
	$(ACE_ROOT)/ace/SOCK.h                   \
	$(ACE_ROOT)/ace/SOCK_Dgram.h             \
	$(ACE_ROOT)/ace/SOCK_Dgram_Mcast.h       \
	$(ACE_ROOT)/ace/SString.h                \
	$(ACE_ROOT)/ace/SStringfwd.h             \
	$(ACE_ROOT)/ace/Semaphore.h              \
	$(ACE_ROOT)/ace/Service_Config.h         \
	$(ACE_ROOT)/ace/Service_Gestalt.h        \
	$(ACE_ROOT)/ace/Service_Object.h         \
	$(ACE_ROOT)/ace/Service_Repository.h     \
	$(ACE_ROOT)/ace/Shared_Object.h          \
	$(ACE_ROOT)/ace/Sig_Handler.h            \
	$(ACE_ROOT)/ace/Signal.h                 \
	$(ACE_ROOT)/ace/Singleton.h              \
	$(ACE_ROOT)/ace/Sock_Connect.h           \
	$(ACE_ROOT)/ace/String_Base.h            \
	$(ACE_ROOT)/ace/String_Base_Const.h      \
	$(ACE_ROOT)/ace/Svc_Conf_Tokens.h        \
	$(ACE_ROOT)/ace/Synch.h                  \
	$(ACE_ROOT)/ace/Synch_T.h                \
	$(ACE_ROOT)/ace/Synch_Traits.h           \
	$(ACE_ROOT)/ace/TSS_Adapter.h            \
	$(ACE_ROOT)/ace/TSS_T.h                  \
	$(ACE_ROOT)/ace/Task.h                   \
	$(ACE_ROOT)/ace/Task_T.h                 \
	$(ACE_ROOT)/ace/Thread.h                 \
	$(ACE_ROOT)/ace/Thread_Adapter.h         \
	$(ACE_ROOT)/ace/Thread_Control.h         \
	$(ACE_ROOT)/ace/Thread_Exit.h            \
	$(ACE_ROOT)/ace/Thread_Manager.h         \
	$(ACE_ROOT)/ace/Thread_Mutex.h           \
	$(ACE_ROOT)/ace/Thread_Semaphore.h       \
	$(ACE_ROOT)/ace/Time_Value.h             \
	$(ACE_ROOT)/ace/Timer_Queuefwd.h         \
	$(ACE_ROOT)/ace/Unbounded_Queue.h        \
	$(ACE_ROOT)/ace/Unbounded_Set.h          \
	$(ACE_ROOT)/ace/Version.h                \
	$(ACE_ROOT)/ace/Versioned_Namespace.h    \
	$(ACE_ROOT)/ace/ace_wchar.h              \
	$(ACE_ROOT)/ace/ace_wchar.inl            \
	$(ACE_ROOT)/ace/checked_iterator.h       \
	$(ACE_ROOT)/ace/config-all.h             \
	$(ACE_ROOT)/ace/config-linux.h           \
	$(ACE_ROOT)/ace/config-linux-common.h    \
	$(ACE_ROOT)/ace/config-lite.h            \
	$(ACE_ROOT)/ace/config-macros.h          \
	$(ACE_ROOT)/ace/config.h                 \
	$(ACE_ROOT)/ace/iosfwd.h                 \
	$(ACE_ROOT)/ace/post.h                   \
	$(ACE_ROOT)/ace/pre.h                    \
	$(ACE_ROOT)/ace/streams.h

lorica_os_include_netinetincludedir = $(includedir)/ace/os_include/netinet
lorica_os_include_netinetinclude_DATA = \
	$(ACE_ROOT)/ace/os_include/netinet/os_in.h

lorica_os_include_sysincludedir = $(includedir)/ace/os_include/sys
lorica_os_include_sysinclude_DATA = \
	$(ACE_ROOT)/ace/os_include/sys/os_ipc.h      \
	$(ACE_ROOT)/ace/os_include/sys/os_mman.h     \
	$(ACE_ROOT)/ace/os_include/sys/os_resource.h \
	$(ACE_ROOT)/ace/os_include/sys/os_sem.h      \
	$(ACE_ROOT)/ace/os_include/sys/os_socket.h   \
	$(ACE_ROOT)/ace/os_include/sys/os_stat.h     \
	$(ACE_ROOT)/ace/os_include/sys/os_time.h     \
	$(ACE_ROOT)/ace/os_include/sys/os_types.h    \
	$(ACE_ROOT)/ace/os_include/sys/os_uio.h      \
	$(ACE_ROOT)/ace/os_include/sys/os_wait.h

lorica_os_includeincludedir = $(includedir)/ace/os_include
lorica_os_includeinclude_DATA = \
	$(ACE_ROOT)/ace/os_include/os_dlfcn.h     \
	$(ACE_ROOT)/ace/os_include/os_errno.h     \
	$(ACE_ROOT)/ace/os_include/os_fcntl.h     \
	$(ACE_ROOT)/ace/os_include/os_float.h     \
	$(ACE_ROOT)/ace/os_include/os_inttypes.h  \
	$(ACE_ROOT)/ace/os_include/os_limits.h    \
	$(ACE_ROOT)/ace/os_include/os_math.h      \
	$(ACE_ROOT)/ace/os_include/os_pthread.h   \
	$(ACE_ROOT)/ace/os_include/os_sched.h     \
	$(ACE_ROOT)/ace/os_include/os_semaphore.h \
	$(ACE_ROOT)/ace/os_include/os_signal.h    \
	$(ACE_ROOT)/ace/os_include/os_stdarg.h    \
	$(ACE_ROOT)/ace/os_include/os_stddef.h    \
	$(ACE_ROOT)/ace/os_include/os_stdint.h    \
	$(ACE_ROOT)/ace/os_include/os_stdio.h     \
	$(ACE_ROOT)/ace/os_include/os_stdlib.h    \
	$(ACE_ROOT)/ace/os_include/os_strings.h   \
	$(ACE_ROOT)/ace/os_include/os_time.h      \
	$(ACE_ROOT)/ace/os_include/os_ucontext.h  \
	$(ACE_ROOT)/ace/os_include/os_unistd.h    \
	$(ACE_ROOT)/ace/os_include/os_wchar.h

lorica_ifrserviceincludedir = $(includedir)/TAO/orbsvcs/orbsvcs/IFRService
lorica_ifrserviceinclude_DATA = \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/IFRService/ComponentContainer_i.h  \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/IFRService/ComponentRepository_i.h \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/IFRService/Container_i.h           \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/IFRService/IFR_BaseS.h             \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/IFRService/IFR_BasicS.h            \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.h       \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/IFRService/IFR_ComponentsS_T.h     \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.h         \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.h         \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/IFRService/IFR_ExtendedS_T.h       \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.h     \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/IFRService/IFR_macro.h             \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/IFRService/IRObject_i.h            \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/IFRService/Options.h               \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/IFRService/Repository_i.h          \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/IFRService/ifr_service_export.h

lorica_securityincludedir = $(includedir)/TAO/orbsvcs/orbsvcs/Security
lorica_securityinclude_DATA = \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/Security/security_export.h

lorica_ssliopincludedir = $(includedir)/TAO/orbsvcs/orbsvcs/SSLIOP
lorica_ssliopinclude_DATA = \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/SSLIOP/SSLIOP_Export.h

lorica_orbsvcsincludedir = $(includedir)/TAO/orbsvcs/orbsvcs
lorica_orbsvcsinclude_DATA = \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/IOR_Multicast.h    \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/SSLIOPC.h          \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/SecurityC.h        \
	$(ACE_ROOT)/TAO/orbsvcs/orbsvcs/svc_utils_export.h

lorica_valuetypeincludedir = $(includedir)/TAO/tao/ValueType
lorica_valuetypeinclude_DATA = \
	$(ACE_ROOT)/TAO/tao/Valuetype/AbstractBase.h \
	$(ACE_ROOT)/TAO/tao/Valuetype/ValueBase.h

lorica_tao_anytypecodeincludedir = $(includedir)/TAO/tao/AnyTypeCode
lorica_tao_anytypecodeinclude_DATA = \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/Any.h                    \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/AnyTypeCode_methods.h    \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/Any_Impl.h               \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/Any_Unknown_IDL_Type.h   \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/BooleanSeqA.h            \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/CharSeqA.h               \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/CurrentA.h               \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/DoubleSeqA.h             \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/DynamicC.h               \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/FloatSeqA.h              \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/IOPA.h                   \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/IOP_IORA.h               \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/LongDoubleSeqA.h         \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/LongLongSeqA.h           \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/LongSeqA.h               \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/NVList.h                 \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/NVList_Adapter_Impl.h    \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/OctetSeqA.h              \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/PI_ForwardA.h            \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/ParameterModeA.h         \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/PolicyA.h                \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/Policy_CurrentA.h        \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/Policy_ManagerA.h        \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/ServicesA.h              \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/ShortSeqA.h              \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/StringSeqA.h             \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/TAO_AnyTypeCode_Export.h \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/TimeBaseA.h              \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/TypeCode.h               \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/TypeCode_Constants.h     \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/Typecode_typesA.h        \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/ULongLongSeqA.h          \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/ULongSeqA.h              \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/UShortSeqA.h             \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/ValueModifierA.h         \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/ValueModifierC.h         \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/ValueModifierS.h         \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/VisibilityA.h            \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/VisibilityC.h            \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/VisibilityS.h            \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/WCharSeqA.h              \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/WStringSeqA.h            \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/WrongTransactionA.h      \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode/orb_typesA.h

lorica_codecfactoryincludedir = $(includedir)/TAO/tao/CodecFactory
lorica_codecfactoryinclude_DATA = \
	$(ACE_ROOT)/TAO/tao/CodecFactory/IOP_Codec_includeA.h \
	$(ACE_ROOT)/TAO/tao/CodecFactory/IOP_Codec_includeC.h

lorica_taoincludedir = $(includedir)/TAO/tao
lorica_taoinclude_DATA = \
	$(ACE_ROOT)/TAO/tao/Abstract_Servant_Base.h     \
	$(ACE_ROOT)/TAO/tao/Adapter.h                   \
	$(ACE_ROOT)/TAO/tao/Adapter_Factory.h           \
	$(ACE_ROOT)/TAO/tao/Adapter_Registry.h          \
	$(ACE_ROOT)/TAO/tao/Allocator.h                 \
	$(ACE_ROOT)/TAO/tao/AnyTypeCode_Adapter.h       \
	$(ACE_ROOT)/TAO/tao/Any_Insert_Policy_T.h       \
	$(ACE_ROOT)/TAO/tao/Arg_Traits_T.h              \
	$(ACE_ROOT)/TAO/tao/Argument.h                  \
	$(ACE_ROOT)/TAO/tao/Basic_Types.h               \
	$(ACE_ROOT)/TAO/tao/BooleanSeqC.h               \
	$(ACE_ROOT)/TAO/tao/Bounded_Array_Sequence_T.h  \
	$(ACE_ROOT)/TAO/tao/Bounded_Basic_String_Sequence_T.h     \
	$(ACE_ROOT)/TAO/tao/Bounded_Object_Reference_Sequence_T.h \
	$(ACE_ROOT)/TAO/tao/Bounded_Sequence_CDR_T.h    \
	$(ACE_ROOT)/TAO/tao/Bounded_Value_Sequence_T.h  \
	$(ACE_ROOT)/TAO/tao/Buffer_Allocator_T.h        \
	$(ACE_ROOT)/TAO/tao/CDR.h                       \
	$(ACE_ROOT)/TAO/tao/CONV_FRAMEC.h               \
	$(ACE_ROOT)/TAO/tao/CORBA_String.h              \
	$(ACE_ROOT)/TAO/tao/CORBA_methods.h             \
	$(ACE_ROOT)/TAO/tao/CharSeqC.h                  \
	$(ACE_ROOT)/TAO/tao/Cleanup_Func_Registry.h     \
	$(ACE_ROOT)/TAO/tao/Collocation_Proxy_Broker.h  \
	$(ACE_ROOT)/TAO/tao/Collocation_Strategy.h      \
	$(ACE_ROOT)/TAO/tao/Configurable_Refcount.h     \
	$(ACE_ROOT)/TAO/tao/CurrentC.h                  \
	$(ACE_ROOT)/TAO/tao/DoubleSeqC.h                \
	$(ACE_ROOT)/TAO/tao/Dynamic_Adapter.h           \
	$(ACE_ROOT)/TAO/tao/Environment.h               \
	$(ACE_ROOT)/TAO/tao/Exception.h                 \
	$(ACE_ROOT)/TAO/tao/Fault_Tolerance_Service.h   \
	$(ACE_ROOT)/TAO/tao/FloatSeqC.h                 \
	$(ACE_ROOT)/TAO/tao/GIOPC.h                     \
	$(ACE_ROOT)/TAO/tao/GIOP_Message_Version.h      \
	$(ACE_ROOT)/TAO/tao/IFR_Client_Adapter.h        \
	$(ACE_ROOT)/TAO/tao/IOPC.h                      \
	$(ACE_ROOT)/TAO/tao/IOP_IORC.h                  \
	$(ACE_ROOT)/TAO/tao/Invocation_Utils.h          \
	$(ACE_ROOT)/TAO/tao/LocalObject.h               \
	$(ACE_ROOT)/TAO/tao/LongDoubleSeqC.h            \
	$(ACE_ROOT)/TAO/tao/LongLongSeqC.h              \
	$(ACE_ROOT)/TAO/tao/LongSeqC.h                  \
	$(ACE_ROOT)/TAO/tao/MProfile.h                  \
	$(ACE_ROOT)/TAO/tao/Messaging_SyncScopeC.h      \
	$(ACE_ROOT)/TAO/tao/NVList_Adapter.h            \
	$(ACE_ROOT)/TAO/tao/ORB.h                       \
	$(ACE_ROOT)/TAO/tao/ORBInitializer_Registry.h   \
	$(ACE_ROOT)/TAO/tao/ORB_Constants.h             \
	$(ACE_ROOT)/TAO/tao/ORB_Core.h                  \
	$(ACE_ROOT)/TAO/tao/ORB_Core_Auto_Ptr.h         \
	$(ACE_ROOT)/TAO/tao/ORB_Core_TSS_Resources.h    \
	$(ACE_ROOT)/TAO/tao/Object.h                    \
	$(ACE_ROOT)/TAO/tao/ObjectKey_Table.h           \
	$(ACE_ROOT)/TAO/tao/Object_Argument_T.h         \
	$(ACE_ROOT)/TAO/tao/Object_KeyC.h               \
	$(ACE_ROOT)/TAO/tao/Object_Loader.h             \
	$(ACE_ROOT)/TAO/tao/Object_Ref_Table.h          \
	$(ACE_ROOT)/TAO/tao/Objref_VarOut_T.h           \
	$(ACE_ROOT)/TAO/tao/OctetSeqC.h                 \
	$(ACE_ROOT)/TAO/tao/PI_ForwardC.h               \
	$(ACE_ROOT)/TAO/tao/ParameterModeC.h            \
	$(ACE_ROOT)/TAO/tao/Parser_Registry.h           \
	$(ACE_ROOT)/TAO/tao/PolicyC.h                   \
	$(ACE_ROOT)/TAO/tao/Policy_CurrentC.h           \
	$(ACE_ROOT)/TAO/tao/Policy_ForwardC.h           \
	$(ACE_ROOT)/TAO/tao/Policy_ManagerC.h           \
	$(ACE_ROOT)/TAO/tao/PortableInterceptorC.h      \
	$(ACE_ROOT)/TAO/tao/Profile.h                   \
	$(ACE_ROOT)/TAO/tao/Pseudo_VarOut_T.h           \
	$(ACE_ROOT)/TAO/tao/Refcounted_ObjectKey.h      \
	$(ACE_ROOT)/TAO/tao/Resource_Factory.h          \
	$(ACE_ROOT)/TAO/tao/Seq_Out_T.h                 \
	$(ACE_ROOT)/TAO/tao/Seq_Var_T.h                 \
	$(ACE_ROOT)/TAO/tao/Sequence_T.h                \
	$(ACE_ROOT)/TAO/tao/Server_Strategy_Factory.h   \
	$(ACE_ROOT)/TAO/tao/Service_Callbacks.h         \
	$(ACE_ROOT)/TAO/tao/Service_Context.h           \
	$(ACE_ROOT)/TAO/tao/ServicesC.h                 \
	$(ACE_ROOT)/TAO/tao/ShortSeqC.h                 \
	$(ACE_ROOT)/TAO/tao/StringSeqC.h                \
	$(ACE_ROOT)/TAO/tao/String_Alloc.h              \
	$(ACE_ROOT)/TAO/tao/String_Manager_T.h          \
	$(ACE_ROOT)/TAO/tao/String_Traits_Base_T.h      \
	$(ACE_ROOT)/TAO/tao/Stub.h                      \
	$(ACE_ROOT)/TAO/tao/SystemException.h           \
	$(ACE_ROOT)/TAO/tao/TAO_Export.h                \
	$(ACE_ROOT)/TAO/tao/TAO_Server_Request.h        \
	$(ACE_ROOT)/TAO/tao/Tagged_Components.h         \
	$(ACE_ROOT)/TAO/tao/Tagged_Profile.h            \
	$(ACE_ROOT)/TAO/tao/Thread_Lane_Resources.h     \
	$(ACE_ROOT)/TAO/tao/TimeBaseC.h                 \
	$(ACE_ROOT)/TAO/tao/Transport_Selection_Guard.h \
	$(ACE_ROOT)/TAO/tao/Typecode_typesC.h           \
	$(ACE_ROOT)/TAO/tao/UB_String_Argument_T.h      \
	$(ACE_ROOT)/TAO/tao/ULongLongSeqC.h             \
	$(ACE_ROOT)/TAO/tao/ULongSeqC.h                 \
	$(ACE_ROOT)/TAO/tao/UShortSeqC.h                \
	$(ACE_ROOT)/TAO/tao/Unbounded_Array_Sequence_T.h            \
	$(ACE_ROOT)/TAO/tao/Unbounded_Basic_String_Sequence_T.h     \
	$(ACE_ROOT)/TAO/tao/Unbounded_Object_Reference_Sequence_T.h \
	$(ACE_ROOT)/TAO/tao/Unbounded_Octet_Sequence_T.h \
	$(ACE_ROOT)/TAO/tao/Unbounded_Sequence_CDR_T.h   \
	$(ACE_ROOT)/TAO/tao/Unbounded_Value_Sequence_T.h \
	$(ACE_ROOT)/TAO/tao/UserException.h              \
	$(ACE_ROOT)/TAO/tao/VarOut_T.h                   \
	$(ACE_ROOT)/TAO/tao/Versioned_Namespace.h        \
	$(ACE_ROOT)/TAO/tao/WCharSeqC.h                  \
	$(ACE_ROOT)/TAO/tao/WStringSeqC.h                \
	$(ACE_ROOT)/TAO/tao/WrongTransactionC.h          \
	$(ACE_ROOT)/TAO/tao/corbafwd.h                   \
	$(ACE_ROOT)/TAO/tao/debug.h                      \
	$(ACE_ROOT)/TAO/tao/default_environment.h        \
	$(ACE_ROOT)/TAO/tao/objectid.h                   \
	$(ACE_ROOT)/TAO/tao/orb_typesC.h                 \
	$(ACE_ROOT)/TAO/tao/orbconf.h                    \
	$(ACE_ROOT)/TAO/tao/params.h                     \
	$(ACE_ROOT)/TAO/tao/varbase.h

lorica_tao_dynamicanyincludedir = $(includedir)/TAO/tao/DynamicAny
lorica_tao_dynamicanyinclude_DATA = \
	$(ACE_ROOT)/TAO/tao/DynamicAny/DynamicAny.h        \
	$(ACE_ROOT)/TAO/tao/DynamicAny/DynamicAnyC.h       \
	$(ACE_ROOT)/TAO/tao/DynamicAny/dynamicany_export.h

lorica_tao_dynamic_interfaceincludedir = $(includedir)/TAO/tao/DynamicInterface
lorica_tao_dynamic_interfaceinclude_DATA = \
	$(ACE_ROOT)/TAO/tao/DynamicInterface/AMH_DSI_Response_Handler.h \
	$(ACE_ROOT)/TAO/tao/DynamicInterface/Context.h                  \
	$(ACE_ROOT)/TAO/tao/DynamicInterface/DII_CORBA_methods.h        \
	$(ACE_ROOT)/TAO/tao/DynamicInterface/Dynamic_Adapter_Impl.h     \
	$(ACE_ROOT)/TAO/tao/DynamicInterface/ExceptionList.h            \
	$(ACE_ROOT)/TAO/tao/DynamicInterface/Request.h                  \
	$(ACE_ROOT)/TAO/tao/DynamicInterface/Server_Request.h           \
	$(ACE_ROOT)/TAO/tao/DynamicInterface/dynamicinterface_export.h

lorica_tao_endpointpolicyincludedir = $(includedir)/TAO/tao/EndpointPolicy
lorica_tao_endpointpolicyinclude_DATA = \
	$(ACE_ROOT)/TAO/tao/EndpointPolicy/EndpointPolicy.h        \
	$(ACE_ROOT)/TAO/tao/EndpointPolicy/EndpointPolicyA.h       \
	$(ACE_ROOT)/TAO/tao/EndpointPolicy/EndpointPolicyC.h       \
	$(ACE_ROOT)/TAO/tao/EndpointPolicy/EndpointPolicyTypeA.h   \
	$(ACE_ROOT)/TAO/tao/EndpointPolicy/EndpointPolicyTypeC.h   \
	$(ACE_ROOT)/TAO/tao/EndpointPolicy/EndpointPolicy_Export.h \
	$(ACE_ROOT)/TAO/tao/EndpointPolicy/Endpoint_Value_Impl.h   \
	$(ACE_ROOT)/TAO/tao/EndpointPolicy/IIOPEndpointValueC.h    \
	$(ACE_ROOT)/TAO/tao/EndpointPolicy/IIOPEndpointValue_i.h

lorica_tao_ifrclientincludedir = $(includedir)/TAO/tao/IFR_Client
lorica_tao_ifrclientinclude_DATA = \
	$(ACE_ROOT)/TAO/tao/IFR_Client/IFR_BaseA.h         \
	$(ACE_ROOT)/TAO/tao/IFR_Client/IFR_BaseC.h         \
	$(ACE_ROOT)/TAO/tao/IFR_Client/IFR_BasicC.h        \
	$(ACE_ROOT)/TAO/tao/IFR_Client/IFR_ComponentsC.h   \
	$(ACE_ROOT)/TAO/tao/IFR_Client/IFR_ExtendedA.h     \
	$(ACE_ROOT)/TAO/tao/IFR_Client/IFR_ExtendedC.h     \
	$(ACE_ROOT)/TAO/tao/IFR_Client/ifr_client_export.h

lorica_tao_iortableincludedir = $(includedir)/TAO/tao/IORTable
lorica_tao_iortableinclude_DATA = \
	$(ACE_ROOT)/TAO/tao/IORTable/IORTable.h        \
	$(ACE_ROOT)/TAO/tao/IORTable/IORTableC.h       \
	$(ACE_ROOT)/TAO/tao/IORTable/iortable_export.h

lorica_tao_messagingincludedir = $(includedir)/TAO/tao/Messaging
lorica_tao_messaginginclude_DATA = \
	$(ACE_ROOT)/TAO/tao/Messaging/AMH_Response_Handler.h \
	$(ACE_ROOT)/TAO/tao/Messaging/Messaging.h            \
	$(ACE_ROOT)/TAO/tao/Messaging/messaging_export.h

lorica_tao_piincludedir = $(includedir)/TAO/tao/PI
lorica_tao_piinclude_DATA = \
	$(ACE_ROOT)/TAO/tao/PI/ClientRequestInfoC.h        \
	$(ACE_ROOT)/TAO/tao/PI/ClientRequestInterceptorC.h \
	$(ACE_ROOT)/TAO/tao/PI/InterceptorC.h              \
	$(ACE_ROOT)/TAO/tao/PI/InvalidSlotC.h              \
	$(ACE_ROOT)/TAO/tao/PI/ORBInitInfoC.h              \
	$(ACE_ROOT)/TAO/tao/PI/ORBInitializerC.h           \
	$(ACE_ROOT)/TAO/tao/PI/PI.h                        \
	$(ACE_ROOT)/TAO/tao/PI/PICurrentC.h                \
	$(ACE_ROOT)/TAO/tao/PI/PIForwardRequestC.h         \
	$(ACE_ROOT)/TAO/tao/PI/PolicyFactoryC.h            \
	$(ACE_ROOT)/TAO/tao/PI/ProcessingModePolicyC.h     \
	$(ACE_ROOT)/TAO/tao/PI/RequestInfoC.h              \
	$(ACE_ROOT)/TAO/tao/PI/pi_export.h

lorica_tao_portableserverincludedir = $(includedir)/TAO/tao/PortableServer
lorica_tao_portableserverinclude_DATA = \
	$(ACE_ROOT)/TAO/tao/PortableServer/Default_Policy_Validator.h  \
	$(ACE_ROOT)/TAO/tao/PortableServer/IdAssignmentPolicyA.h       \
	$(ACE_ROOT)/TAO/tao/PortableServer/IdAssignmentPolicyC.h       \
	$(ACE_ROOT)/TAO/tao/PortableServer/IdUniquenessPolicyA.h       \
	$(ACE_ROOT)/TAO/tao/PortableServer/IdUniquenessPolicyC.h       \
	$(ACE_ROOT)/TAO/tao/PortableServer/ImplicitActivationPolicyA.h \
	$(ACE_ROOT)/TAO/tao/PortableServer/ImplicitActivationPolicyC.h \
	$(ACE_ROOT)/TAO/tao/PortableServer/Key_Adapters.h              \
	$(ACE_ROOT)/TAO/tao/PortableServer/LifespanPolicyA.h           \
	$(ACE_ROOT)/TAO/tao/PortableServer/LifespanPolicyC.h           \
	$(ACE_ROOT)/TAO/tao/PortableServer/Object_Adapter.h            \
	$(ACE_ROOT)/TAO/tao/PortableServer/POAC.h                      \
	$(ACE_ROOT)/TAO/tao/PortableServer/POAManagerC.h               \
	$(ACE_ROOT)/TAO/tao/PortableServer/POAManagerFactory.h         \
	$(ACE_ROOT)/TAO/tao/PortableServer/POAManagerFactoryC.h        \
	$(ACE_ROOT)/TAO/tao/PortableServer/POA_Policy_Set.h            \
	$(ACE_ROOT)/TAO/tao/PortableServer/PS_CurrentC.h               \
	$(ACE_ROOT)/TAO/tao/PortableServer/PS_ForwardA.h               \
	$(ACE_ROOT)/TAO/tao/PortableServer/PS_ForwardC.h               \
	$(ACE_ROOT)/TAO/tao/PortableServer/PortableServer.h            \
	$(ACE_ROOT)/TAO/tao/PortableServer/PortableServerC.h           \
	$(ACE_ROOT)/TAO/tao/PortableServer/PortableServer_Functions.h  \
	$(ACE_ROOT)/TAO/tao/PortableServer/PortableServer_WFunctions.h \
	$(ACE_ROOT)/TAO/tao/PortableServer/RequestProcessingPolicyA.h  \
	$(ACE_ROOT)/TAO/tao/PortableServer/RequestProcessingPolicyC.h  \
	$(ACE_ROOT)/TAO/tao/PortableServer/ServantRetentionPolicyA.h   \
	$(ACE_ROOT)/TAO/tao/PortableServer/ServantRetentionPolicyC.h   \
	$(ACE_ROOT)/TAO/tao/PortableServer/Servant_Base.h              \
	$(ACE_ROOT)/TAO/tao/PortableServer/Servant_Location.h          \
	$(ACE_ROOT)/TAO/tao/PortableServer/Servant_var.h               \
	$(ACE_ROOT)/TAO/tao/PortableServer/ThreadPolicyA.h             \
	$(ACE_ROOT)/TAO/tao/PortableServer/ThreadPolicyC.h             \
	$(ACE_ROOT)/TAO/tao/PortableServer/poa_macros.h                \
	$(ACE_ROOT)/TAO/tao/PortableServer/portableserver_export.h

lorica_tao_typecodefactoryincludedir = $(includedir)/TAO/tao/TypeCodeFactory
lorica_tao_typecodefactoryinclude_DATA = \
	$(ACE_ROOT)/TAO/tao/TypeCodeFactory/TypeCodeFactory_Loader.h

endif # LORICA_DEVEL

endif # HAVE_ACE_ROOT

endif # LORICA_MUST_INSTALL_ACETAO


$(CWD)/lorica.conf:

$(CWD)/lorica.ssliop:

sysconf_DATA = \
	$(CWD)/lorica.conf \
	$(CWD)/lorica.ssliop

if THIS_IS_NOT_A_DISTRIBUTION
CLEAN_IN_FILES = Makefile.in
else
CLEAN_IN_FILES =
endif

DISTCLEANFILES = $(CWD)/*.o $(CLEAN_IN_FILES) Makefile .deps .libs .obj lorica lorica.ior lorica.pid
CLEANFILES = $(CWD)/*.o 
